extends layout

block append scripts
  script.
    var settings = {
      options : "#{ settings.options }",
      path : "#{ settings.path }",
      imageSuffix : "#{ experiment.image.extension }",
      maximalFrames : "#{ settings.maximalFrames }",
      experimentId : "#{ experiment._id.toString() }"
    };

    var tracking;
    $( document ).ready(function() {
      tracking = new Tracking( settings );

      $('.ui.dropdown').dropdown();

      $( window ).resize(function() {
        $("#canvasContainer").height( $("#backgroundCanvas").height() );
      });

      $(".contrast").click(function () {
        tracking.setContrast($("#contrast").val());   
      });

      $("#selectionColor").change(function() {
        tracking.setSelectionColor($("#selectionColor").val());
      })

      $("#filter").on('change', '.filterColor', function() {
        tracking.filter().changeFilterColor( $( this ).val(), $( this ).data("index"));
        tracking.redrawCells(); 
      });

      $('#filter').on('click', '.circle.blank.third.icon', function() {
        tracking.filter().deactivate($( this ).data("index"));
        tracking.redrawCells(); 
      });

      $('#filter').on('click', '.circle.remove.third.icon', function() {
        tracking.filter().activate($( this ).data("index"));
        tracking.redrawCells(); 
      });

      $('#filter').on('click', '.up.first.icon', function() {
        tracking.filter().moveUp($( this ).data("index"));
        tracking.redrawCells(); 
      });      

      $('#filter').on('click', '.down.secound.icon', function() {
        tracking.filter().moveDown($( this ).data("index"));
        tracking.redrawCells(); 
      });

      $('#filter').on('click', '.remove.fourth.icon', function() {
        tracking.filter().remove($( this ).data("index"));
        tracking.redrawCells(); 
      });

      $("#addFilter").click(function () {
        tracking.filter().add({
          option : $("#filtertype").val(),
          from : $("#from").val(),
          experiment : settings.experimentId,
          to : $("#to").val(),
          include : ($("#included").val() == "included") ? true : false
        });
        tracking.redrawCells();
        tracking.filter().updateUi();
      });

      $("#playButton").click(function() {
        if(tracking.isRunning())
          tracking.stop();
        else 
          tracking.start();
      });

      $("#backwardButton").click(function() {
        tracking.setFrameId(0);
      });

      $("#forwardButton").click(function() {
        tracking.setFrameId(settings.maximalFrames-1);
      });

      $("#stopButton").click(function() {
        if(tracking.isRunning()) {
          tracking.stop();
          tracking.setFrameId(0);
        }
      });

      $("#repeatButton").click(function() {
        $("#repeatButton").toggleClass( "active red" );

        if(!tracking.inRepeatMode())
          tracking.activateRepeat();
        else 
          tracking.deactivateRepeat();
      });

      $("#foregroundCanvas").click(function(event) {
        tracking.selectCell(event);
      });

      $(".ui.progress").click(function(event) {
        var posX = parseInt ($( this ).offset().left);
        var mouseX = parseInt (event.pageX) - posX;

        if(mouseX > $( this ).width()) {
          mouseX = $( this ).width();
        }

        relativePosition = mouseX/$( this ).width();
        tracking.jumpTo(Math.round((settings.maximalFrames-1)*relativePosition));
      });
    });
block content
  .sixteen.wide.column
    .ui.breadcrumb
      a.section(href="/") Home
      .ui.divider / 
      .active.section #{ experiment.name }
  h2.ui.header #{ experiment.name }
  .ui.divider
  .twelve.wide.column
    p.ui.large.label #{ experiment.authors }
  .twelve.wide.column
    #canvasContainer
      canvas#backgroundCanvas.celltrack_canvas(style="position: absolute; z-index: 0")
      canvas#foregroundCanvas.celltrack_canvas(style="position: absolute; z-index: 1")
      | Sorry, your browser cannot display this image. 
      | Download and install the latest version of 
      br
      | your favorite browser and try it again.
      .ui.active.dimmer#celltrack_state
        .ui.loader
    .ui.divider(style="border: none")
    .ui.progress
      #progress.notransition.bar(style="width: 0%;")
    #buttonmenu.ui.icon.buttons
      #playButton.huge.ui.toggle.button
        i#playIcon.play.icon
        i#pauseIcon.hidden.pause.icon
      #backwardButton.huge.ui.button
        i.step.backward.icon
      #forwardButton.huge.ui.button
        i.step.forward.icon
      #stopButton.huge.ui.button
        i.stop.icon
      #repeatButton.huge.ui.toggle.button
        i.repeat.icon
  .four.wide.column
    .ui.secondary.segment
      h2.ui.header
        i.comment.outline.icon
        | Description
      p #{ experiment.description }
    .ui.secondary.segment
      h2.ui.header
        i.puzzle.piece.icon
        | Toolbox
      .ui.selection.dropdown
        input#contrast(type="hidden",name="contrast")
        .default.text Contrast variations
        i.dropdown.icon
        .menu
          for option in settings.options
            .contrast.item(data-value="#{ option }") #{ option }
      .ui.divider
      label Selection Color 
      input#selectionColor(type="color",name="selectionColor",value="#00FF00")
      .ui.divider
      .ui.form
        .grouped.inline.fields
          .ui.field
            .ui.radio.checkbox
              input#single_cell(type="radio",name="selection_type",checked="")
              label(for="single_cell") Cell selection
          .ui.field
            .ui.radio.checkbox
              input#tree(type="radio",name="selection_type")
              label(for="tree") Tree selection
    .ui.secondary.segment
      h2.ui.header
        i.wrench.icon
        | Filter Settings
      .ui.selection.dropdown
        input#filtertype(type="hidden",value="meanspeed",name="filtertype")
        .text meanspeed
        i.dropdown.icon
        .menu
          .item.active(data-text="meanspeed") Meanspeed
          .item(data-text="directness") Directness
          .item(data-text="length") Length
          .item(data-text="angle") Angle
          .item(data-text="displacement") Displacement
          .item(data-text="speed") Speed
      .ui.divider
      div Preseclect all paths  
        .ui.inline.dropdown
          input#included(type="hidden",value="included",name="included")
          .text included
          i.dropdown.icon
          .menu
            .item.active(data-text="included") included
            .item(data-text="not included") not included
        | in the values between:
      .ui.input
        input#from(type="text",value="1")
      .ui.input
        label(for="to") and
        input#to(type="text",value="1.2")
      .ui.divider
      #addFilter.ui.green.down.large.button
        i.add.sign.icon
        | Add Filter
      #filterArea.ui.secondary.segment(style="display:none")
        h2.ui.header Filter
        #filter